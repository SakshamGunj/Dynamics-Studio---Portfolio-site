{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Sidebar() {\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [anchor]: open\n    }));\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxs(Box, {\n    sx: {\n      width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250\n    },\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsx(List, {\n      children: ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/_jsxs(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n          primary: text\n        })]\n      }, text))\n    }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(List, {\n      children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxs(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n          primary: text\n        })]\n      }, text))\n    })]\n  });\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: ['left', 'right', 'top', 'bottom'].map(anchor => /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        onClick: toggleDrawer(anchor, true),\n        children: anchor\n      }), /*#__PURE__*/_jsx(Drawer, {\n        anchor: anchor,\n        open: state[anchor],\n        onClose: toggleDrawer(anchor, false),\n        children: list(anchor)\n      })]\n    }, anchor))\n  });\n}","map":null,"metadata":{},"sourceType":"module"}